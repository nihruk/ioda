openapi: '3.1.0'
info:
  title: IODA
  version: '0.0.0'
  x-logo:
    url: https://www.nihr.ac.uk/layout/4.0/assets/logos/nihr-master-logo-325px.png
    href: https://nihr.ac.uk
    backgroundColor: '#ffffff'
servers:
  - url: 'https://example.com'
    description: Live API.
paths:
  '/program':
    get:
      tags:
        - Research program
      summary: Get a collection of research programs
      responses:
        '200':
          '$ref': '#/components/responses/200OKProgramCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
  '/program/{programId}':
    get:
      tags:
        - Research program
      summary: Get a research program
      responses:
        '200':
          '$ref': '#/components/responses/200OKProgram'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/programId'
  '/award':
    get:
      operationId: getAwardCollection
      tags:
        - Award
      summary: Get a collection of awards
      responses:
        '200':
          '$ref': '#/components/responses/200OKAwardCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/organizationIdFilter'
        name: host
      - '$ref': '#/components/parameters/programIdFilter'
      - '$ref': '#/components/parameters/organizationIdFilter'
        name: contractor
      - '$ref': '#/components/parameters/personIdFilter'
        name: people
  '/award/{awardId}':
    get:
      tags:
        - Award
      summary: Get an award
      responses:
        '200':
          '$ref': '#/components/responses/200OKAward'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/awardId'
  '/person':
    get:
      tags:
        - Person
      summary: Get a collection of people
      responses:
        '200':
          '$ref': '#/components/responses/200OKPersonCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
  '/person/{personId}':
    get:
      tags:
        - Person
      summary: Get a person
      responses:
        '200':
          '$ref': '#/components/responses/200OKPerson'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/personId'
  '/organization':
    get:
      tags:
        - Organization
      summary: Get a collection of organizations.
      responses:
        '200':
          '$ref': '#/components/responses/200OKOrganizationCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
  '/organization/{organizationId}':
    get:
      tags:
        - Organization
      summary: Get an organization
      responses:
        '200':
          '$ref': '#/components/responses/200OKOrganization'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/organizationId'
  '/user':
    get:
      tags:
        - User
      summary: Get a collection of users
      responses:
        '200':
          '$ref': '#/components/responses/200OKUserCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '401':
          '$ref': '#/components/responses/401Unauthorized'
        '403':
          '$ref': '#/components/responses/403Forbidden'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
    post:
      tags:
        - User
      summary: Save a new user
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/user'
      responses:
        '200':
          '$ref': '#/components/responses/200OKUser'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '401':
          '$ref': '#/components/responses/401Unauthorized'
        '403':
          '$ref': '#/components/responses/403Forbidden'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
  '/user/{userId}':
    get:
      tags:
        - User
      summary: Get a user
      responses:
        '200':
          '$ref': '#/components/responses/200OKUser'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '401':
          '$ref': '#/components/responses/401Unauthorized'
        '403':
          '$ref': '#/components/responses/403Forbidden'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
    patch:
      tags:
        - User
      summary: Update a user
      requestBody:
        content:
          application/json-patch+json:
            schema:
              '$ref': 'https://json.schemastore.org/json-patch'
      responses:
        '200':
          '$ref': '#/components/responses/200OKUser'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '401':
          '$ref': '#/components/responses/401Unauthorized'
        '403':
          '$ref': '#/components/responses/403Forbidden'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
    delete:
      tags:
        - User
      summary: Delete a user
      responses:
        '200':
          description: The user was successfully deleted.
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '401':
          '$ref': '#/components/responses/401Unauthorized'
        '403':
          '$ref': '#/components/responses/403Forbidden'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
    parameters:
      - '$ref': '#/components/parameters/userId'
components:
  schemas:
    organization:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/organizationId'
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The organization's human-readable name.
          examples:
            - University of Southampton
        address:
          '$ref': '#/components/schemas/address'
      required:
        - id
        - name
      additionalProperties: false
    program:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/programId'
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The program's human-readable name.
      required:
        - id
        - name
      additionalProperties: false
    award:
      type: object
      title: Award
      description: A research award.
      properties:
        id:
          '$ref': '#/components/schemas/awardId'
        start:
          title: Start date
          description: The date the research started.
          type: full-date
          examples:
            - 1970-01-01
        end:
          title: End date
          description: The date the research ended.
          type: full-date
          examples:
            - 2000-01-01
        funding:
          title: The total NIHR funding granted to the award
          description: 'The granted funding in pence sterling. Example: `254566100` representing £2,545,661.00.'
          type: integer
          minimum: 1
          examples:
            - 254566100
        website:
          title: Website
          description: The absolute URL to the award's own website.
          type: string
          format: uri
        host:
          '$ref': '#/components/schemas/organizationReference'
        program:
          '$ref': '#/components/schemas/programReference'
        contractor:
          '$ref': '#/components/schemas/organizationReference'
        isrctn:
          '$ref': '#/components/schemas/isrctn'
        prospero:
          '$ref': '#/components/schemas/prospero'
        people:
          type: array
          items:
            '$ref': '#/components/schemas/personInvolvement'
      required:
        - id
        - host
        - program
        - contractor
      additionalProperties: false
    person:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/personId'
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The person's name.
          examples:
            - Josiah Carberry
        orcid:
          '$ref': '#/components/schemas/orcid'
      required:
        - id
        - name
      additionalProperties: false
    user:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/userId'
        emailAddress:
          type: string
          format: email
          description: The user's email address.
      required:
        - id
        - emailAddress
      additionalProperties: false
    error:
      type: object
      properties:
        message:
          type: string
          minLength: 1
          maxLength: 255
          description: The human-readable error message.
        http:
          type: object
          properties:
            status:
              type: string
              pattern: '^\d\d\d$'
              description: The HTTP response status code.
            message:
              type: string
              minLength: 1
              maxLength: 255
              description: The HTTP response status message.
          required:
            - status
            - message
          additionalProperties: false
      required:
        - message
        - http
      additionalProperties: false
    programId:
      title: Program ID
      description: A research program ID.
      type: string
      minLength: 1
      maxLength: 255
    programReference:
      title: Program reference
      description: The relative URL of the endpoint to call to retrieve this research program.
      type: string
      format: uri
      examples:
        - /program/123
    awardId:
      title: Award ID
      description: An award ID.
      type: string
      minLength: 1
      maxLength: 255
      examples:
        - 06/303/20
        - NIHR203571
    awardReference:
      title: Award reference
      description: The relative URL of the endpoint to call to retrieve this award.
      type: string
      format: uri
      examples:
        - /award/06/303/20
    personId:
      title: Person ID
      description: A person ID.
      type: string
      minLength: 1
      maxLength: 255
    personReference:
      title: Person reference
      description: The relative URL of the endpoint to call to retrieve this person.
      type: string
      format: uri
      examples:
        - /person/123
    personInvolvement:
      name: Involvement
      oneOf:
      - type: object
      - '$ref': '#/components/schemas/contributorInvolvement'
      discriminator:
        propertyName: role
        mapping:
          lead_applicant: '#/components/schemas/simpleInvolvement'
          joint_lead_applicant: '#/components/schemas/simpleInvolvement'
          lead_investigator: '#/components/schemas/simpleInvolvement'
          chief_investigator: '#/components/schemas/simpleInvolvement'
          co_investigator: '#/components/schemas/simpleInvolvement'
          director: '#/components/schemas/simpleInvolvement'
          contributor: '#/components/schemas/contributorInvolvement'
    simpleInvolvement:
      name: Simple involvement
      type: object
      properties:
        person:
          '$ref': '#/components/schemas/personReference'
        role:
          description: This person's role as part of their involvement.
          enum:
            - lead_applicant
            - joint_lead_applicant
            - lead_investigator
            - chief_investigator
            - co_investigator
            - director
            - contributor
      required:
        - person
        - role
    contributorInvolvement:
      name: Contributor involvement
      allOf:
        - '$ref': '#/components/schemas/simpleInvolvement'
        - type: object
          properties:
            credit:
              name: CRediT role
              description: The [Contributor Roles Taxonomy](https://credit.niso.org/) (CRediT) roles that describes this contributor's involvement.
              type: array
              items:
                '$ref': '#/components/schemas/credit'
    credit:
      description: A [Contributor Roles Taxonomy](https://credit.niso.org/) (CRediT) role that describes a contributor's involvement.
      enum:
        - conceptualization
        - data-curation
        - formal-analysis
        - funding-acquisition
        - investigation
        - methodology
        - project-administration
        - resources
        - software
        - supervision
        - validation
        - visualization
        - writing-original-draft
        - writing-review-editing
    institutionId:
      title: Institution ID
      description: An institution ID.
    organizationId:
      title: Organization ID
      description: An organization ID.
      type: string
      minLength: 1
      maxLength: 255
    organizationReference:
      title: Organization reference
      description: The relative URL of the endpoint to call to retrieve this organization.
      type: string
      format: uri
      examples:
        - /organization/123
    userId:
      title: User ID
      '$ref': '#/components/schemas/uuidV4'
    userReference:
      title: User reference
      description: The relative URL of the endpoint to call to retrieve this user.
      type: string
      format: uri
      examples:
        - /user/123e4567-e89b-12d3-a456-426614174000
    uuidV4:
      title: UUID v4
      description: A UUID version 4.
      externalDocs:
        url: https://datatracker.ietf.org/doc/html/rfc4122
        description: RFC 4122.
      type: string
      pattern: '[0-9a-f]{8}\-[0-9a-f]{4}\-4[0-9a-f]{3}\-[89ab][0-9a-f]{3}\-[0-9a-f]{12}'
      examples:
        - 123e4567-e89b-12d3-a456-426614174000
      readonly: true
    orcid:
      title: ORCID
      description: Open Researcher and Contributor ID.
      externalDocs:
        url: https://orcid.org/
        description: Official ORCID site.
      type: string
      pattern: '^https:\/\/orcid.org\/\d{4}-\d{4}-\d{4}-\d{4}$'
      examples:
        - https://orcid.org/0000-0002-1825-0097
    isrctn:
      title: ISRCTN
      description: An ISRCTN registration number.
      externalDocs:
        url: https://www.isrctn.com/
        description: Official ISRCTN site.
      type: string
      pattern: '^ISRCTN\d{8}$'
      examples:
        - ISRCTN86750102
    prospero:
      title: PROSPERO
      description: A PROSPERO registration number.
      externalDocs:
        url: https://www.crd.york.ac.uk/PROSPERO/
        description: Official PROSPERO site.
      type: string
      minLength: 1
      maxLength: 255
      examples:
        - CRD42021232535
    coordinates:
      type: object
      title: Coordinates
      description: Geographic coordinates.
      properties:
        latitude:
          title: Latitude
          type: number
          examples:
            - 50.93457002193244
          description: A geographic coordinate in decimal degrees.
        longitude:
          title: Longitude
          type: number
          examples:
            - -1.3971751797681855
          description: A geographic coordinate in decimal degrees.
      required:
        - latitude
        - longitude
      additionalProperties: false
    postcode:
      title: Postcode
      description: A UK postcode.
      type: string
      pattern: '^[A-Z]{1,2}[0-9][A-Z0-9]? ?[0-9][A-Z]{2}$'
      examples:
        - SO17 1BJ
    address:
      title: Address
      description: A UK address.
      type: object
      properties:
        line1:
          title: Line 1
          type: string
          minLength: 1
          maxLength: 255
          examples:
            - University of Southampton
        line2:
          title: Line 2
          type: string
          minLength: 1
          maxLength: 255
          examples:
            - University Road
        line3:
          title: Line 3
          type: string
          minLength: 1
          maxLength: 255
        town:
          title: Town
          type: string
          minLength: 1
          maxLength: 255
          examples:
            - Southampton
        postcode:
          '$ref': '#/components/schemas/postcode'
        coordinates:
          '$ref': '#/components/schemas/coordinates'
      required:
        - line1
        - town
        - postcode
      additionalProperties: false
  parameters:
    programId:
      name: programId
      description: Research program ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/programId'
    programIdFilter:
      name: program
      description: Research program ID.
      in: query
      schema:
        '$ref': '#/components/schemas/programId'
    awardId:
      name: awardId
      description: Award ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/awardId'
    personId:
      name: personId
      description: Person ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/personId'
    personIdFilter:
      name: person
      description: Person ID.
      in: query
      schema:
        '$ref': '#/components/schemas/personId'
    organizationId:
      name: organizationId
      description: Organization ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/organizationId'
    organizationIdFilter:
      name: organization
      description: Organization ID.
      in: query
      schema:
        '$ref': '#/components/schemas/organizationId'
    userId:
      name: userId
      description: User ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/userId'
  responses:
    200OKProgram:
      description: A research program.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/program'
      links:
        awards:
          operationId: getAwardCollection
          parameters:
            program: '$response.body#/id'
    200OKProgramCollection:
      description: A collection of research programs.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/programReference'
    200OKAward:
      description: An award.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/award'
    200OKAwardCollection:
      description: A collection of awards.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/awardReference'
    200OKPerson:
      description: A person.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/person'
    200OKPersonCollection:
      description: A collection of people.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/personReference'
    200OKOrganization:
      description: An organization.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/organization'
      links:
        contractedAwards:
          operationId: getAwardCollection
          parameters:
            contractor: '$response.body#/id'
        hostedAwards:
          operationId: getAwardCollection
          parameters:
            host: '$response.body#/id'
    200OKOrganizationCollection:
      description: A collection of organizations.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/organizationReference'
    200OKUser:
      description: A user.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/user'
    200OKUserCollection:
      description: A collection of users.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/userReference'
    400BadRequest:
      description: An HTTP 400 Bad Request error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    401Unauthorized:
      description: An HTTP 401 Unauthorized error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    403Forbidden:
      description: An HTTP 403 Forbidden error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    404NotFound:
      description: An HTTP 404 Not Found error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    405MethodNotAllowed:
      description: An HTTP 405 Method Not Allowed error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    406NotAcceptable:
      description: An HTTP 406 Not Acceptable error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    415UnsupportedMediaType:
      description: An HTTP 415 Unsupported Media Type error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    500InternalServerError:
      description: An HTTP 500 Internal Server Error error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    502BadGateway:
      description: An HTTP 502 Bad Gateway error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    503ServiceUnavailable:
      description: An HTTP 503 Service Unavailable error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    504GatewayTimeout:
      description: An HTTP 504 Gateway Timeout error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
  securitySchemes:
    ioda:
      type: http
      scheme: Bearer
      description: An API token generated through your user account.
