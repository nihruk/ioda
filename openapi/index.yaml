openapi: '3.1.0'
info:
  title: IODA
  version: '0.0.0'
  x-logo:
    url: https://www.nihr.ac.uk/layout/4.0/assets/logos/nihr-master-logo-325px.png
    href: https://nihr.ac.uk
    backgroundColor: '#ffffff'
servers:
  - url: 'https://example.com'
    description: Live API.
paths:
  '/program':
    get:
      tags:
        - Research program
      summary: Get a collection of research programs
      responses:
        '200':
          '$ref': '#/components/responses/200OKProgramCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
  '/program/{programId}':
    get:
      tags:
        - Research program
      summary: Get a research program
      responses:
        '200':
          '$ref': '#/components/responses/200OKProgram'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/programId'
  '/award':
    get:
      operationId: getAwardCollection
      tags:
        - Award
      summary: Get a collection of awards
      responses:
        '200':
          '$ref': '#/components/responses/200OKAwardCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/organizationIdFilter'
        name: host
      - '$ref': '#/components/parameters/programIdFilter'
      - '$ref': '#/components/parameters/organizationIdFilter'
        name: contractor
      - '$ref': '#/components/parameters/journalIdFilter'
      - '$ref': '#/components/parameters/personIdFilter'
        name: lead_applicants
      - '$ref': '#/components/parameters/personIdFilter'
        name: joint_lead_applicants
      - '$ref': '#/components/parameters/personIdFilter'
        name: lead_investigators
      - '$ref': '#/components/parameters/personIdFilter'
        name: chief_investigators
      - '$ref': '#/components/parameters/personIdFilter'
        name: co_investigators
      - '$ref': '#/components/parameters/personIdFilter'
        name: directors
  '/award/{awardId}':
    get:
      tags:
        - Award
      summary: Get an award
      responses:
        '200':
          '$ref': '#/components/responses/200OKAward'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/awardId'
  '/journal':
    get:
      tags:
        - Journal
      summary: Get a collection of journals
      responses:
        '200':
          '$ref': '#/components/responses/200OKJournalCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
  '/journal/{journalId}':
    get:
      tags:
        - Journal
      summary: Get a journal
      responses:
        '200':
          '$ref': '#/components/responses/200OKJournal'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/journalId'
  '/volume':
    get:
      operationId: getVolumeCollection
      tags:
        - Volume
      summary: Get a collection of volumes
      responses:
        '200':
          '$ref': '#/components/responses/200OKVolumeCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/journalIdFilter'
  '/volume/{volumeId}':
    get:
      tags:
        - Volume
      summary: Get a volume
      responses:
        '200':
          '$ref': '#/components/responses/200OKVolume'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/volumeId'
  '/publication':
    get:
      operationId: getPublicationCollection
      tags:
        - Publication
      summary: Get a collection of publications
      responses:
        '200':
          '$ref': '#/components/responses/200OKPublicationCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/awardIdFilter'
      - '$ref': '#/components/parameters/journalIdFilter'
      - '$ref': '#/components/parameters/volumeIdFilter'
  '/publication/{publicationId}':
    get:
      tags:
        - Publication
      summary: Get a publication
      responses:
        '200':
          '$ref': '#/components/responses/200OKPublication'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/publicationId'
  '/person':
    get:
      tags:
        - Person
      summary: Get a collection of people
      responses:
        '200':
          '$ref': '#/components/responses/200OKPersonCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
  '/person/{personId}':
    get:
      tags:
        - Person
      summary: Get a person
      responses:
        '200':
          '$ref': '#/components/responses/200OKPerson'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/personId'
  '/organization':
    get:
      tags:
        - Organization
      summary: Get a collection of organizations.
      responses:
        '200':
          '$ref': '#/components/responses/200OKOrganizationCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
  '/organization/{organizationId}':
    get:
      tags:
        - Organization
      summary: Get an organization
      responses:
        '200':
          '$ref': '#/components/responses/200OKOrganization'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/organizationId'
  '/user':
    get:
      tags:
        - User
      summary: Get a collection of users
      responses:
        '200':
          '$ref': '#/components/responses/200OKUserCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '401':
          '$ref': '#/components/responses/401Unauthorized'
        '403':
          '$ref': '#/components/responses/403Forbidden'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
    post:
      tags:
        - User
      summary: Save a new user
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/user'
      responses:
        '200':
          '$ref': '#/components/responses/200OKUser'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '401':
          '$ref': '#/components/responses/401Unauthorized'
        '403':
          '$ref': '#/components/responses/403Forbidden'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
  '/user/{userId}':
    get:
      tags:
        - User
      summary: Get a user
      responses:
        '200':
          '$ref': '#/components/responses/200OKUser'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '401':
          '$ref': '#/components/responses/401Unauthorized'
        '403':
          '$ref': '#/components/responses/403Forbidden'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
    patch:
      tags:
        - User
      summary: Update a user
      requestBody:
        content:
          application/json-patch+json:
            schema:
              '$ref': 'https://json.schemastore.org/json-patch'
      responses:
        '200':
          '$ref': '#/components/responses/200OKUser'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '401':
          '$ref': '#/components/responses/401Unauthorized'
        '403':
          '$ref': '#/components/responses/403Forbidden'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
    delete:
      tags:
        - User
      summary: Delete a user
      responses:
        '200':
          description: The user was successfully deleted.
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '401':
          '$ref': '#/components/responses/401Unauthorized'
        '403':
          '$ref': '#/components/responses/403Forbidden'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
    parameters:
      - '$ref': '#/components/parameters/userId'
components:
  schemas:
    organization:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/organizationId'
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The organization's human-readable name.
          examples:
            - University of Southampton
        address:
          '$ref': '#/components/schemas/address'
      required:
        - id
        - name
      additionalProperties: false
    program:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/programId'
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The program's human-readable name.
      required:
        - id
        - name
      additionalProperties: false
    award:
      type: object
      title: Award
      description: A research award.
      properties:
        id:
          '$ref': '#/components/schemas/awardId'
        start:
          title: Start date
          description: The date the research started.
          type: full-date
          examples:
            - 1970-01-01
        end:
          title: End date
          description: The date the research ended.
          type: full-date
          examples:
            - 2000-01-01
        funding:
          title: The total NIHR funding granted to the award
          description: 'The granted funding in pence sterling. Example: `254566100` representing £2,545,661.00.'
          type: integer
          multipleOf: 1
          minimum: 1
          examples:
            - 254566100
        website:
          title: Website
          description: The absolute URL to the award's own website.
          type: string
          format: uri
        host:
          '$ref': '#/components/schemas/organizationReference'
        program:
          '$ref': '#/components/schemas/programReference'
        contractor:
          '$ref': '#/components/schemas/organizationReference'
        lead_applicants:
          type: array
          items:
            '$ref': '#/components/schemas/personReference'
        joint_lead_applicants:
          type: array
          items:
            '$ref': '#/components/schemas/personReference'
        lead_investigators:
          type: array
          items:
            '$ref': '#/components/schemas/personReference'
        chief_investigators:
          type: array
          items:
            '$ref': '#/components/schemas/personReference'
        co_investigators:
          type: array
          items:
            '$ref': '#/components/schemas/personReference'
        directors:
          type: array
          items:
            '$ref': '#/components/schemas/personReference'
        isrctn:
          '$ref': '#/components/schemas/isrctn'
        prospero:
          '$ref': '#/components/schemas/prospero'
      required:
        - id
        - host
        - program
        - contractor
      additionalProperties: false
    journal:
      type: object
      title: Journal
      description: A journal.
      properties:
        id:
          '$ref': '#/components/schemas/journalId'
        name:
          title: Name
          description: The journal's human-readable name.
          type: string
          minLength: 1
          maxLength: 255
          examples:
            - Efficacy and Mechanism Evaluation
            - Health and Social Care Delivery Research
            - Programme Grants for Applied Research
        description:
          title: Description
          description: A description of the journal.
          type: string
          minLength: 1
        issns:
          '$ref': '#/components/schemas/issns'
        images:
          title: Images
          description: Images of the journal.
          type: array
          minItems: 1
          items:
            title: The URL to the image.
            type: string
            format: uri
      required:
        - id
        - name
        - description
        - issns
        - images
      additionalProperties: false
    volume:
      type: object
      title: Volume
      description: A volume.
      properties:
        id:
          '$ref': '#/components/schemas/volumeId'
        journal:
          '$ref': '#/components/schemas/journalReference'
        number:
          title: The volume number
          type: integer
          multipleOf: 1
          minimum: 1
          examples:
            - 11
      required:
        - id
        - journal
        - number
      additionalProperties: false
    publication:
      type: object
      title: Publication
      description: A publication.
      properties:
        id:
          '$ref': '#/components/schemas/publicationId'
        award:
          '$ref': '#/components/schemas/awardReference'
        journal:
          '$ref': '#/components/schemas/journalReference'
        volume:
          '$ref': '#/components/schemas/volumeReference'
        doi:
          '$ref': '#/components/schemas/doi'
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The publication's human-readable name.
        abstract:
          '$ref': '#/components/schemas/formattedText'
        citation:
          type: string
          minLength: 1
          maxLength: 255
          description: The publication's human-readable citation.
      required:
        - id
        - award
        - journal
        - doi
        - name
        - abstract
        - citation
      additionalProperties: false
    person:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/personId'
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The person's name.
          examples:
            - Josiah Carberry
        orcid:
          '$ref': '#/components/schemas/orcid'
      required:
        - id
        - name
      additionalProperties: false
    user:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/userId'
        emailAddress:
          type: string
          format: email
          description: The user's email address.
      required:
        - id
        - emailAddress
      additionalProperties: false
    error:
      type: object
      properties:
        message:
          type: string
          minLength: 1
          maxLength: 255
          description: The human-readable error message.
        http:
          type: object
          properties:
            status:
              type: string
              pattern: '^\d\d\d$'
              description: The HTTP response status code.
            message:
              type: string
              minLength: 1
              maxLength: 255
              description: The HTTP response status message.
          required:
            - status
            - message
          additionalProperties: false
      required:
        - message
        - http
      additionalProperties: false
    programId:
      title: Program ID
      description: A research program ID.
      type: string
      minLength: 1
      maxLength: 255
    programReference:
      title: Program reference
      description: The relative URL of the endpoint to call to retrieve this research program.
      type: string
      format: uri
      examples:
        - /program/123
    awardId:
      title: Award ID
      description: An award ID.
      type: string
      minLength: 1
      maxLength: 255
      examples:
        - 06/303/20
        - NIHR203571
    awardReference:
      title: Award reference
      description: The relative URL of the endpoint to call to retrieve this award.
      type: string
      format: uri
      examples:
        - /award/06/303/20
    journalId:
      title: Journal ID
      description: A journal ID.
      type: string
      minLength: 1
      maxLength: 255
      examples:
        - eme
        - hsdr
        - pfgar
    journalReference:
      title: Journal reference
      description: The relative URL of the endpoint to call to retrieve this journal.
      type: string
      format: uri
      examples:
        - /journal/eme
        - /journal/hsdr
        - /journal/pgfar
    volumeId:
      title: Volume ID
      description: A volume ID.
      type: string
      minLength: 1
      maxLength: 255
    volumeReference:
      title: Volume reference
      description: The relative URL of the endpoint to call to retrieve this volume.
      type: string
      format: uri
      examples:
        - /volume/???
    publicationId:
      title: Publication ID
      description: A publication ID.
      type: string
      minLength: 1
      maxLength: 255
      examples:
        - DANE8826
    publicationReference:
      title: Publication reference
      description: The relative URL of the endpoint to call to retrieve this publication.
      type: string
      format: uri
      examples:
        - /publication/DANE8826
    personId:
      title: Person ID
      description: A person ID.
      type: string
      minLength: 1
      maxLength: 255
    personReference:
      title: Person reference
      description: The relative URL of the endpoint to call to retrieve this person.
      type: string
      format: uri
      examples:
        - /person/123
    organizationId:
      title: Organization ID
      description: An organization ID.
      type: string
      minLength: 1
      maxLength: 255
    organizationReference:
      title: Organization reference
      description: The relative URL of the endpoint to call to retrieve this organization.
      type: string
      format: uri
      examples:
        - /organization/123
    userId:
      title: User ID
      '$ref': '#/components/schemas/uuidV4'
    userReference:
      title: User reference
      description: The relative URL of the endpoint to call to retrieve this user.
      type: string
      format: uri
      examples:
        - /user/123e4567-e89b-12d3-a456-426614174000
    uuidV4:
      title: UUID v4
      description: A UUID version 4.
      externalDocs:
        url: https://datatracker.ietf.org/doc/html/rfc4122
        description: RFC 4122.
      type: string
      pattern: '[0-9a-f]{8}\-[0-9a-f]{4}\-4[0-9a-f]{3}\-[89ab][0-9a-f]{3}\-[0-9a-f]{12}'
      examples:
        - 123e4567-e89b-12d3-a456-426614174000
      readonly: true
    orcid:
      title: ORCID
      description: Open Researcher and Contributor ID.
      externalDocs:
        url: https://orcid.org/
        description: Official ORCID site.
      type: string
      pattern: '^https:\/\/orcid.org\/\d{4}-\d{4}-\d{4}-\d{4}$'
      examples:
        - https://orcid.org/0000-0002-1825-0097
    isrctn:
      title: ISRCTN
      description: An ISRCTN registration number.
      externalDocs:
        url: https://www.isrctn.com/
        description: Official ISRCTN site.
      type: string
      pattern: '^ISRCTN\d{8}$'
      examples:
        - ISRCTN86750102
    prospero:
      title: PROSPERO
      description: A PROSPERO registration number.
      externalDocs:
        url: https://www.crd.york.ac.uk/PROSPERO/
        description: Official PROSPERO site.
      type: string
      minLength: 1
      maxLength: 255
      examples:
        - CRD42021232535
    issn:
      title: ISSN
      description: International Standard Serial Number.
      externalDocs:
        url: https://www.issn.org/
        description: Official ISSN site.
      type: string
      pattern: '^[0-9]{4}-[0-9]{3}[0-9xX]$'
      examples:
        - 0317-8471
        - 1050-124X
    issns:
      title: ISSNs
      type: object
      properties:
        print:
          '$ref': '#/components/schemas/issn'
        online:
          '$ref': '#/components/schemas/issn'
      additionalProperties: false
      required:
        - print
        - online
    doi:
      title: DOI
      description: Digital Object Identifier
      externalDocs:
        url: https://www.doi.org/
        description: Official DOI site.
      type: string
      pattern: '^https:\/\/doi.org\/'
      examples:
        - https://doi.org/10.1000/182
    formattedText:
      title: Formatted text
      description: Text that may have a content type different from `text/plain` and that may thus require additional formatting.
      type: object
      properties:
        text:
          type: string
          minLength: 1
        type:
          title: The text's content type
          enum:
            - text/plain
      additionalProperties: false
      required:
        - text
        - type
    coordinates:
      type: object
      title: Coordinates
      description: Geographic coordinates.
      properties:
        latitude:
          title: Latitude
          type: number
          examples:
            - 50.93457002193244
          description: A geographic coordinate in decimal degrees.
        longitude:
          title: Longitude
          type: number
          examples:
            - -1.3971751797681855
          description: A geographic coordinate in decimal degrees.
      required:
        - latitude
        - longitude
      additionalProperties: false
    postcode:
      title: Postcode
      description: A UK postcode.
      type: string
      pattern: '^[A-Z]{1,2}[0-9][A-Z0-9]? ?[0-9][A-Z]{2}$'
      examples:
        - SO17 1BJ
    address:
      title: Address
      description: A UK address.
      type: object
      properties:
        line1:
          title: Line 1
          type: string
          minLength: 1
          maxLength: 255
          examples:
            - University of Southampton
        line2:
          title: Line 2
          type: string
          minLength: 1
          maxLength: 255
          examples:
            - University Road
        line3:
          title: Line 3
          type: string
          minLength: 1
          maxLength: 255
        town:
          title: Town
          type: string
          minLength: 1
          maxLength: 255
          examples:
            - Southampton
        postcode:
          '$ref': '#/components/schemas/postcode'
        coordinates:
          '$ref': '#/components/schemas/coordinates'
      required:
        - line1
        - town
        - postcode
      additionalProperties: false
  parameters:
    programId:
      name: programId
      description: Research program ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/programId'
    programIdFilter:
      name: program
      description: Research program ID.
      in: query
      schema:
        '$ref': '#/components/schemas/programId'
    awardId:
      name: awardId
      description: Award ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/awardId'
    awardIdFilter:
      name: award
      description: Research award ID.
      in: query
      schema:
        '$ref': '#/components/schemas/awardId'
    journalId:
      name: journalId
      description: Journal ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/journalId'
    journalIdFilter:
      name: journal
      description: Research journal ID.
      in: query
      schema:
        '$ref': '#/components/schemas/journalId'
    volumeId:
      name: volumeId
      description: Volume ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/volumeId'
    volumeIdFilter:
      name: volume
      description: Research volume ID.
      in: query
      schema:
        '$ref': '#/components/schemas/volumeId'
    publicationId:
      name: publicationId
      description: Publication ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/publicationId'
    publicationIdFilter:
      name: publication
      description: Research publication ID.
      in: query
      schema:
        '$ref': '#/components/schemas/publicationId'
    personId:
      name: personId
      description: Person ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/personId'
    personIdFilter:
      name: person
      description: Person ID.
      in: query
      schema:
        '$ref': '#/components/schemas/personId'
    organizationId:
      name: organizationId
      description: Organization ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/organizationId'
    organizationIdFilter:
      name: organization
      description: Organization ID.
      in: query
      schema:
        '$ref': '#/components/schemas/organizationId'
    userId:
      name: userId
      description: User ID.
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/userId'
  responses:
    200OKProgram:
      description: A research program.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/program'
      links:
        awards:
          operationId: getAwardCollection
          parameters:
            program: '$response.body#/id'
    200OKProgramCollection:
      description: A collection of research programs.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/programReference'
    200OKAward:
      description: An award.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/award'
    200OKAwardCollection:
      description: A collection of awards.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/awardReference'
    200OKJournal:
      description: A journal.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/journal'
    200OKJournalCollection:
      description: A collection of journals.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/journalReference'
    200OKVolume:
      description: A volume.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/volume'
      links:
        awards:
          operationId: getPublicationCollection
          parameters:
            volume: '$response.body#/id'
    200OKVolumeCollection:
      description: A collection of volumes.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/volumeReference'
    200OKPublication:
      description: A publication.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/publication'
    200OKPublicationCollection:
      description: A collection of publications.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/publicationReference'
    200OKPerson:
      description: A person.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/person'
      links:
        lead_applicant_awards:
          operationId: getAwardCollection
          description: Get all awards for which this person is a lead applicant.
          parameters:
            lead_applicants: '$response.body#/id'
        joint_lead_applicant_awards:
          operationId: getAwardCollection
          description: Get all awards for which this person is a joint lead applicant.
          parameters:
            joint_lead_applicants: '$response.body#/id'
        lead_investigator_awards:
          operationId: getAwardCollection
          description: Get all awards for which this person is a lead investigator.
          parameters:
            lead_investigators: '$response.body#/id'
        chief_investigator_awards:
          operationId: getAwardCollection
          description: Get all awards for which this person is a chief investigator.
          parameters:
            chief_investigators: '$response.body#/id'
        co_investigator_awards:
          operationId: getAwardCollection
          description: Get all awards for which this person is a co-investigator.
          parameters:
            co_investigator: '$response.body#/id'
        director_awards:
          operationId: getAwardCollection
          description: Get all awards for which this person is a director.
          parameters:
            directors: '$response.body#/id'
    200OKPersonCollection:
      description: A collection of people.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/personReference'
    200OKOrganization:
      description: An organization.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/organization'
      links:
        contractedAwards:
          operationId: getAwardCollection
          parameters:
            contractor: '$response.body#/id'
        hostedAwards:
          operationId: getAwardCollection
          parameters:
            host: '$response.body#/id'
    200OKOrganizationCollection:
      description: A collection of organizations.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/organizationReference'
    200OKUser:
      description: A user.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/user'
    200OKUserCollection:
      description: A collection of users.
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/userReference'
    400BadRequest:
      description: An HTTP 400 Bad Request error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    401Unauthorized:
      description: An HTTP 401 Unauthorized error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    403Forbidden:
      description: An HTTP 403 Forbidden error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    404NotFound:
      description: An HTTP 404 Not Found error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    405MethodNotAllowed:
      description: An HTTP 405 Method Not Allowed error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    406NotAcceptable:
      description: An HTTP 406 Not Acceptable error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    415UnsupportedMediaType:
      description: An HTTP 415 Unsupported Media Type error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    500InternalServerError:
      description: An HTTP 500 Internal Server Error error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    502BadGateway:
      description: An HTTP 502 Bad Gateway error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    503ServiceUnavailable:
      description: An HTTP 503 Service Unavailable error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    504GatewayTimeout:
      description: An HTTP 504 Gateway Timeout error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
  securitySchemes:
    ioda:
      type: http
      scheme: Bearer
      description: An API token generated through your user account.
